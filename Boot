#include <iostream>

using namespace std;

struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int val) : data(val), left(nullptr), right(nullptr) {}
};

class BST {
private:
    Node* root;

    Node* insertRecursive(Node* root, int val) {
        if (root == nullptr) {
            return new Node(val);
        }
        if (val < root->data) {
            root->left = insertRecursive(root->left, val);
        } else if (val > root->data) {
            root->right = insertRecursive(root->right, val);
        }
        return root;
    }

public:
    BST() : root(nullptr) {}

    void insert(int val) {
        root = insertRecursive(root, val);
    }

    // Implement other BST operations like search, delete, etc.
};

int main() {
    BST bst;
    bst.insert(50);
    bst.insert(30);
    bst.insert(70);
    bst.insert(20);
    bst.insert(40);
    // Perform BST operations
    return 0;
}
